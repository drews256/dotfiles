set nocompatible              " be iMproved, required
filetype off                  " required
set incsearch                   " incremental search
set laststatus=2                " show a status bar at the bottom of each window
set ruler
set list                        " show tabs as arrows and trailing spaces as dash
set listchars=tab:>\ ,trail:-,extends:>,precedes:<
set showcmd                     " shows partial commands in the lower right
set showmatch                   " blink opening parens when closing
set wildmenu                    " allow tab to cycle through found options
set wildmode=list:longest
set splitbelow                  " open newly split file on the bottom
set splitright                  " open newly split file on the right
set autoread                    " load files that have been updated on disk
set scrolloff=5                 " screen scrolls at 5 lines from top or bottom
set hlsearch                    " highlight search terms
hi Visual term=reverse cterm=reverse
set backspace=indent,eol,start  " allow removing indents and line breaks
set visualbell
set nu
set t_Co=16

"set the runtime path to include Vundle and initialize
"Use Vundle for easy plugin management
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
"Vim airline for fancy gutter
Plugin 'vim-airline/vim-airline'
"Tmux line for fancy tmux gutter
Bundle 'edkolev/tmuxline.vim'
"Vim rspec to run tests easily from
Plugin 'thoughtbot/vim-rspec'
"Work with coffeescript
Plugin 'kchmck/vim-coffee-script'
"Ployglot for working with other languages
Plugin 'sheerun/vim-polyglot'
"Tpopes sweet plugins for working with vim
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-dispatch'
Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-unimpaired'
"This was installed, not certain I want it
Plugin 'mustache/vim-mustache-handlebars'
" Add some syntax highlight for .jsx
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
"let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
call vundle#end()            " required
filetype plugin indent on    " required

filetype plugin on
"Powerline and airline settings

let g:Powerline_symbols = 'fancy'
let g:airline_powerline_fonts = 1
cmap w!! %!sudo tee > /dev/null

augroup myfiletypes
  " Clear old autocmds in group
  autocmd!
  " autoindent with two spaces, always expand tabs
  autocmd FileType text,ruby,eruby,yaml,html,cucumber,javascript,coffee,javascript.jsx set ai sw=2 sts=2 et ts=2
  autocmd BufNewFile,BufRead *.prawn setf ruby
augroup END

" Bundle Open command, from Bernerd Schaefer
" Call with :BundleOpen <gemname>
function! s:BundleOpen(Gem) abort
  if exists(':Btabedit')
    execute 'Btabedit '.a:Gem
    redraw
    let v:warningmsg = 'Use :Btabedit instead. It has tab complete!'
    echomsg v:warningmsg
    return
  endif
  let path = system('bundle show '.a:Gem)
  if v:shell_error != 0
    echo 'failed to run command'
  else
    exe 'tabedit '.substitute(path, '\v\C\n$', '', '') | :lcd %
  endif
endfunction
:command! -nargs=1 BundleOpen :call s:BundleOpen(<q-args>)

noremap           <F1>   <Esc>
noremap!          <F1>   <Esc>
let g:rails_projections = {
  \ "app/assets/javascripts/*.coffee": {
  \    "command": "coffee"
  \ },
  \ "app/decorators/*_decorator.rb": {
  \    "command": "decorator"
  \ },
  \ "app/interactions/*.rb": {
  \    "command": "activeinteraction"
  \ },
  \ "app/observers/*_observer.rb": {
  \    "command": "observer"
  \ },
  \ "app/presenter/*_presenter.rb": {
  \    "command": "presenter"
  \ },
  \ "spec/features/*_spec.rb": {
  \    "command": "feature"
  \ },
  \ "features/pages/*_page.rb": {
  \    "command": "page"
  \ },
  \ "features/step_definitions/*_steps.rb": {
  \    "command": "step"
  \ },
  \ "spec/support/*.rb": {
  \    "command": "support"
  \ },
  \ "spec/factories/*_factory.rb": {
  \    "command": "factory",
  \    "template": "FactoryGirl.define do\n  \nend"
  \ }}
